import styled from 'styled-components';
export type Editdata = {
  id?: string;
  first_name?: string;
  last_name?: string;
  contact_number?: string;
  email?: string;
  relationship?: string;
  is_primary_contact?: string;
  organisation?: string;
  level?: string;
  qualification_studyfield?: string;
  from_date?: string;
  to_date?: string;
  file_upload?: string;
  id_number?: string;
  issue_date?: string;
  expiry_date?: string;
  status?: string;
  notes?: string;
  issue_country?: string;
  type?: string;
  vaccination_type?: string;
  vaccinated_date?: string;
  vaccination_number?: string;
};
type ErrorComponent = styled<'p', any, unknown, never>;

export type PersonalContextProps = {
  children?: React.ReactNode;
  Error: ErrorComponent;
  AddComponent: CallableFunction;
  EditComponent: CallableFunction;
  addPersonalDetail: CallableFunction;
  addEmergencyContact: CallableFunction;
  setEditData: CallableFunction | any;
  // setEditData: React.Dispatch<React.SetStateAction<Editdata>>;
  getPrimaryList: CallableFunction;
  getEducation: CallableFunction;
  getCertification: CallableFunction;
  getIdentification: CallableFunction;
  getUserPersonalDetails: CallableFunction;
  setPrimaryList: CallableFunction;
  setEducationList: CallableFunction;
  setCertificationList: CallableFunction;
  setIdentificationList: CallableFunction;
  setVisaList: CallableFunction;
  setClearanceList: CallableFunction;
  setVaccinationList: CallableFunction;
  addTitle: string;
  editTitle: string;
  editData: Editdata[];
  countrycodeList: any;
  visaList: any;
  clearanceList: any;
  vaccinationList: any;
  countryList: any;
  listData: Array<any> | null;
  primaryList: Array<any> | null;
  educationList: Array<any> | null;
  certificationList: Array<any> | null;
  identificationList: Array<any> | null;
  loading: boolean | null;
  getHistoryList: CallableFunction;
  historyList: Array<{
    id: number;
    user_id: number;
    type: string;
    history: string;
    created_at: string;
  }> | null;
  checkIsOpned: CallableFunction;
  updateViewDocuments: CallableFunction;
  allFieldPermissionType: Array<any>;
  updateViewNotes: CallableFunction;
};
